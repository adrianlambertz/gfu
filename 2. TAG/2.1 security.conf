#
# Disable access to the entire file system except for the directories that
# are explicitly allowed later.
#
# This currently breaks the configurations that come with some web application
# Debian packages.
#
<Directory "/">
    Require all denied
</Directory>


# Changing the following options will not really affect the security of the
# server, but might make attacks slightly more difficult in some cases.

#
# ServerTokens
# This directive configures what you return as the Server HTTP response
# Header. The default is 'Full' which sends information about the OS-Type
# and compiled in modules.
# Set to one of:  Full | OS | Minimal | Minor | Major | Prod
# where Full conveys the most information, and Prod the least.
ServerTokens Prod

#
# Optionally add a line containing the server version and virtual host
# name to server-generated pages (internal error documents, FTP directory
# listings, mod_status and mod_info output etc., but not CGI generated
# documents or custom error documents).
# Set to "EMail" to also include a mailto: link to the ServerAdmin.
# Set to one of:  On | Off | EMail
ServerSignature Off

#
# Allow TRACE method
#
# Set to "extended" to also reflect the request body (only for testing and
# diagnostic purposes).
#
# Set to one of:  On | Off | extended
TraceEnable Off

#
# Forbid access to version control directories
#
# If you use version control systems in your document root, you should
# probably deny access to their directories. For example, for subversion:
#
<DirectoryMatch "/\.git">
   Require all denied
</DirectoryMatch>

#
# Setting this header will prevent MSIE from interpreting files as something
# else than declared by the content type in the HTTP headers.
# Requires mod_headers to be enabled.
#
Header set X-Content-Type-Options: "nosniff"

#KeepAlive
Header set Connection keep-alive

#
# Setting this header will prevent other sites from embedding pages from this
# site as frames. This defends against clickjacking attacks.
# Requires mod_headers to be enabled.
#
Header always append X-Frame-Options SAMEORIGIN
FileETag None
Header edit Set-Cookie ^(.*)$ $1;HttpOnly;Secure
Header set X-XSS-Protection "1; mode=block"


<IfModule mod_setenvif.c>

    ## DENY ACCESS TO XMLRPC.PHP ##
    <Files xmlrpc.php>
        BrowserMatch "Blogsy" allowed
        BrowserMatch "Poster" allowed
        BrowserMatch "WordPress" allowed
        BrowserMatch "Windows Live Writer" allowed
        BrowserMatch "IFTTT production" allowed

        Require all denied
	    Require env allowed granted
    </Files>

    ## DENY ACCESS FOR THE FOLLOWING FILES ##
    <FilesMatch "(\.htaccess|\.htpasswd|wp-config\.php|liesmich\.html|readme\.html|readme\.txt|liesmich\.txt)$">
        Require all denied
    </FilesMatch>

</IfModule>



## DISABLE DIRECT PHP EXECUTION IN WPINCLUDES
   <Directorymatch "^/.*/\wp-includes/">
      <Files *.php>
         Require all denied
      </Files>
      <Files wp-tinymce.php>
         Require all granted
      </Files>
   </Directorymatch>

# DISABLE AUTODISCOVER
   <LocationMatch "/autodiscover">
	#Require all denied
	Redirect 204 /autodiscover/autodiscover.xml
   </LocationMatch>

#DISABLE USER ENUMERATION WP-JSON
  <LocationMatch "/wp-json/wp/v2/users">
        Require all denied
  </LocationMatch>


## DISABLE DIRECT PHP EXECUTION IN UPLOADS FOLDER
   <Directorymatch "^/.*/\wp-content/uploads/">
      <Files *.php>
         Require all denied
      </Files>
   </Directorymatch>

## Disable direct access to acf-json
   <DirectoryMatch "^\/.*\/acf-json\/">
        Require all denied
   </DirectoryMatch>


## DETECT MALICIOUSE STRING
<IfModule mod_rewrite.c>
 RewriteEngine On
 RewriteCond %{THE_REQUEST} ^.*(\\r|\\n|%0A|%0D).* [NC]
 RewriteRule ^(.*)$ - [F,L]
</IfModule>

<IfModule mod_rewrite.c>
 RewriteEngine On
 RewriteCond %{REQUEST_URI} ^.*(,|;|:|<|>|">|"<|/|\\\.\.\\).* [NC,OR]
 RewriteCond %{REQUEST_URI} ^.*(\=|\@|\[|\]|\^|\`|\{|\}|\~).* [NC,OR]
 RewriteCond %{REQUEST_URI} ^.*(\'|%0A|%0D|%27|%3C|%3E|%00).* [NC]
 RewriteRule ^(.*)$ - [F,L]
</IfModule>

<IfModule mod_rewrite.c>
 RewriteEngine On
 RewriteCond %{QUERY_STRING} ^.*(localhost|loopback|127\.0\.0\.1).*                                [NC,OR]
 RewriteCond %{QUERY_STRING} ^.*(\.|\*|;|<|>|'|"|\)|%0A|%0D|%22|%27|%3C|%3E|%00).*                 [NC,OR]
 RewriteCond %{QUERY_STRING} ^.*(md5|benchmark|union|select|insert|cast|set|declare|drop|update).* [NC]
 RewriteRule ^(.*)$ - [F,L]
</IfModule>


<If "%{QUERY_STRING} =~ /^author=([0-9]*)/">
  Require all denied
</If>


<If "%{QUERY_STRING} =~ /share=email&nb=1|shared=email&msg=fail/">
  Require all denied
</If>

<If "%{QUERY_STRING} =~ /share=/ && %{QUERY_STRING} !~ /nb=/">
  Require all denied
</If>

<If "%{HTTP_USER_AGENT} =~ /MJ12bot|HTTrack|AhrefsBot|Cliqzbot|semrush/">
    Require all denied
</If>

<If "%{HTTP_REFERER} =~ /semalt|kambasoft|savetubevideo|darodar/">
    Require all denied
</If>


# KNOWN WORDPRESS HACK/SCANNERS

<If "%{HTTP_USER_AGENT} == 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:62.0) Gecko/20100101 Firefox/62.0'">
    Require all denied
</If>
<If "%{HTTP_USER_AGENT} == 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:40.0) Gecko/20100101 Firefox/40.1'">
    Require all denied
</If>
<If "%{HTTP_USER_AGENT} == 'Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.2.8) Gecko/20100721 Firefox/3.6.8'">
    Require all denied
</If>


# ALLOW JSON CROSSDOMAIN

<FilesMatch "\.(json)$">
Header set Access-Control-Allow-Origin "*"
</FilesMatch>


<FilesMatch "wp-login\.(php)$">
	SetEnv nokeepalive 1
</FilesMatch>
